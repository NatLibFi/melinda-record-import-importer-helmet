# Melinda node tests

name: Melinda node tests

on: push

jobs:
  build-node-versions:
    name: Node version matrix
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Checkout the code
      uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
      env:
        NPM_CONFIG_IGNORE_SCRIPTS: true
    - run: npm audit --package-lock-only --production --audit-level=moderate
    - run: npm ci
    - run: npm test
    - run: npm run build --if-present

  njsscan:
    name: Njsscan check
    needs: build-node-versions
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the code
      uses: actions/checkout@v2
    - name: nodejsscan scan
      id: njsscan
      uses: ajinabraham/njsscan-action@master
      with:
        args: '.'

  quayio:
    name: Image builder & deployer
    needs: njsscan
    runs-on: ubuntu-latest

    env:
      image_name: ${{ github.repository }}
      GIT_EVENT_NAME: ${{ github.event_name }}
      GIT_REF_NAME: ${{ github.ref_name }}

    steps:
      - uses: actions/checkout@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: name/app
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Login to Quay.io
        uses: docker/login-action@v1
        with:
          registry: quay.io
          repository: natlibfi/${{ env.image_name }}
          username: ${{ secrets.MELINDA_QUAY_IO_USERNAME }}
          password: ${{ secrets.MELINDA_QUAY_IO_PASSWORD }}
      - name: Build and publish image to Quay
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}